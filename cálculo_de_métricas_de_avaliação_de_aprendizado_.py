# -*- coding: utf-8 -*-
"""Cálculo de Métricas de Avaliação de Aprendizado .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QuoNh-4LoAiqM9A6Z2wOvMWdW0yrwiX9
"""

import numpy as np

# Vamos definir VP, VN, FP, FN arbitrários para o exemplo
VP = 50   # Verdadeiros Positivos
VN = 40   # Verdadeiros Negativos
FP = 10   # Falsos Positivos
FN = 5    # Falsos Negativos

# Total de elementos
N = VP + VN + FP + FN

print(f"VP={VP}, VN={VN}, FP={FP}, FN={FN}, N={N}")

def sensibilidade(VP, FN):
    return VP / (VP + FN)

S = sensibilidade(VP, FN)
print("Sensibilidade (Recall):", S)

def especificidade(VN, FP):
    return VN / (VN + FP)

E = especificidade(VN, FP)
print("Especificidade:", E)

def precisao(VP, FP):
    return VP / (VP + FP)

P = precisao(VP, FP)
print("Precisão (Precision):", P)

def acuracia(VP, VN, FP, FN):
    return (VP + VN) / (VP + VN + FP + FN)

A = acuracia(VP, VN, FP, FN)
print("Acurácia:", A)

def f_score(precisao, sensibilidade):
    return 2 * (precisao * sensibilidade) / (precisao + sensibilidade)

F = f_score(P, S)
print("F-Score:", F)

print("Resumo das Métricas de Avaliação:")
print(f"Acurácia: {A:.4f}")
print(f"Sensibilidade (Recall): {S:.4f}")
print(f"Especificidade: {E:.4f}")
print(f"Precisão (Precision): {P:.4f}")
print(f"F-Score: {F:.4f}")